/*	Question Set 1 - Easy */

/* Q1: Who is the senior most employee based on job title? */

select title,first_name,Last_name from employee
order by levels DESC
limit 1

/*Question 2- Which countries have the most Invoices?*/

select billing_country, Count(billing_country) as C from invoice
group by billing_country
order by C desc;

*/ Questions 3- What are top 3 values of total invoice? */

select billing_country, Count(billing_country) as C from invoice
group by billing_country
order by C desc
limit 3;


/* Question 4. Which city has the best customers? 
We would like to throw a promotional Music Festival in the city we made the most money. 
Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals */


select billing_country,Sum(total)As Total_invoice from invoice 
group by Billing_Country
order by Total_invoice DESC;


/* Question 5. Who is the best customer? 
The customer who has spent the most money will be declared the best customer. 
Write a query that returns the person who has spent the most money*/


SELECT customer.customer_id, customer.first_name, customer.last_name, SUM(invoice.total) AS total_spending
FROM customer
JOIN invoice ON customer.customer_id = invoice.customer_id
GROUP BY customer.customer_id, customer.first_name, customer.last_name
ORDER BY total_spending DESC
LIMIT 1;

/*	Question Set 2 - Moderate */

/*Write query to return the email, first name, last name, & Genre of all Rock Music listeners. 
Return your list ordered alphabetically by email starting with A*/


select customer.first_name,customer.last_name,customer.email from customer
join invoice on invoice.customer_id=customer.customer_id
join invoice_line on invoice_line.invoice_id=invoice.invoice_id
join track on track.track_id=invoice_line.track_id
join genre on genre.genre_id=track.genre_id
where genre.name="Rock"
order by customer.email;

/*Questions 2. Let's invite the artists who have written the most rock music in our dataset. 
Write a query that returns the Artist name and total track count of the top 10 rock bands*/

select artist.name, count(track.track_id)as TRACK from artist 
join album2 on album2.artist_id=artist.artist_id
join track on track.album_id=album2.album_id
join genre on genre.genre_id=track.genre_id
where genre.name like "Rock"
group by artist.name
order by TRACK DESC
LIMIT 10;


/*Question  -3. Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track.
 Order by the song length with the longest songs listed first*/
 
 select track.name,track.milliseconds FROM track
 where track.milliseconds>
 (select avg(milliseconds) from track)
 order by milliseconds DESC;
 
 
 /*	Question Set 3 â€“ Advance */
 
  /*	Question 1. Find how much amount spent by each customer on artists? 
  Write a query to return customer name, artist name and total spent */
  
  select Concat(customer.first_name," ",customer.last_name),artist.name as Artist_name,sum(invoice_line.unit_price*invoice_line.quantity) from customer
  join invoice on invoice.customer_id= customer.customer_id 
  join invoice_line ON invoice_line.invoice_id=invoice.invoice_id
  join track on track.track_id=invoice_line.track_id
  join album2 on album2.album_id=track.album_id
  join artist on artist.artist_id=album2.artist_id
  group by customer.first_name,customer.last_name,Artist_name
  order by sum(invoice_line.unit_price*invoice_line.quantity) DESC
